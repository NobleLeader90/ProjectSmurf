@model OperationSmurf.Models.Section

@{
    ViewData["Title"] = "Edit Roster";
}

<h1>Edit Roster</h1>

<h4>Section</h4>
<h3>@Model.CourseName</h3>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="SetRoster">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />

            <h1>@Model.Roster.Count</h1>
            @if (Model.Roster.Count == 0)
            {
                Student s = new Student();
                <h2>got here</h2>
                <div class="form-group">
                    <label asp-for="@Model.Roster[0].FirstName" class="control-label"></label>
                    <input asp-for="@Model.Roster[0].FirstName" class="form-control" />
                    <span asp-validation-for="@Model.Roster[0].FirstName" class="text-danger"></span>
                </div>
            }

            else
            {



                for (int i = 0; i < @Model.Roster.Count; i++)
                {

                    <div class="form-group">
                        <label asp-for="@Model.Roster[i].FirstName" class="control-label"></label>
                        <input asp-for="@Model.Roster[i].FirstName" class="form-control" />
                        <span asp-validation-for="@Model.Roster[i].FirstName" class="text-danger"></span>
                    </div>

                }

            }
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
